spring:
  application:
    name: compliance-sync-service
  # H2 Database Configuration
  datasource:
    url: jdbc:h2:file:./data/compliance_state_db;AUTO_SERVER=TRUE
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update # Creates/updates the schema on startup
    show-sql: true    # Enable SQL logging for debugging
    properties:
      hibernate:
        format_sql: true    # Pretty-print SQL statements
        use_sql_comments: true  # Add comments to SQL for context
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092 # Change to your Kafka broker
    consumer:
      group-id: compliance-sync-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Optimized Logging Configuration for Bootstrap Debugging
logging:
  level:
    # Set root level to INFO to reduce noise
    root: INFO

    # Bootstrap-specific logging - KEEP THESE for debugging data issues
    com.edwardjones.cre.service.BootstrapService: DEBUG
    com.edwardjones.cre.client: INFO  # API calls and responses

    # Database/JPA debugging - Enable these for hierarchical data troubleshooting
    org.hibernate.SQL: DEBUG          # Show raw SQL statements
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # Show bind parameters
    org.springframework.jdbc.core.JdbcTemplate: TRACE     # Spring JDBC operations
    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: ERROR
    org.springframework.orm.jpa: WARN
    org.springframework.transaction: WARN

    # Spring Framework - Reduce noise but keep important startup info
    org.springframework: INFO
    org.springframework.boot.autoconfigure: WARN
    org.springframework.security: WARN
    org.springframework.web: WARN

    # Kafka - Only important events
    org.apache.kafka: WARN
    org.springframework.kafka: INFO

    # External libraries - Minimal logging
    org.springframework.ldap: WARN
    com.fasterxml.jackson: WARN
    org.apache.http: WARN

  # Custom pattern to make bootstrap logs easier to identify
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# Custom Application Properties
app:
  kafka:
    topics:
      ad-changes: ad-user-changes-topic
      crt-changes: crt-team-changes-topic
      dlt: compliance-sync.dlt # Dead Letter Topic
  reconciliation:
    cron: "0 0 2 * * ?" # 2 AM every day
  
  # Client Configuration for Production
  client:
    # LDAP Configuration for Active Directory
    ldap:
      url: ${LDAP_URL:ldap://ad.edwardjones.com:389}
      base: ${LDAP_BASE:DC=edj,DC=ad,DC=edwardjones,DC=com}
      username: ${LDAP_USERNAME:CN=service-account,OU=Service Accounts,DC=edj,DC=ad,DC=edwardjones,DC=com}
      password: ${LDAP_PASSWORD:your-ldap-password}
      search-bases:
        - "OU=People,DC=edj,DC=ad,DC=edwardjones,DC=com"
        - "OU=Branch,OU=US,OU=People,DC=edj,DC=ad,DC=edwardjones,DC=com"
        - "OU=Home Office,OU=US,OU=People,DC=edj,DC=ad,DC=edwardjones,DC=com"
        - "OU=Home Office,OU=CA,OU=People,DC=edj,DC=ad,DC=edwardjones,DC=com"
    
    # CRBT API Configuration
    crbt:
      base-url: ${CRBT_API_BASE_URL:https://crbt-api.edwardjones.com/api/v1}
      ejauth-token: ${CRBT_EJAUTH_TOKEN:your-ejauth-token}
      ejpky-token: ${CRBT_EJPKY_TOKEN:your-ejpky-token}
    
    # Vendor API Configuration
    vendor:
      base-url: ${VENDOR_API_BASE_URL:https://vendor-api.example.com/api/v1}
      api-key: ${VENDOR_API_KEY:your-vendor-api-key}
